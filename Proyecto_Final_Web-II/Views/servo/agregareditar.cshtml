@model Proyecto_Final_Web_II.Models.Servo
@{
    ViewBag.Title = "agregareditar";
}

<center><h2 class="card text-center">Agregar Editar</h2></center>

<nav aria-label="breadcrumb">
    <ol class=" breadcrumb">
        <li class="breadcrumb-item">
            <a href="~/servo"> Servo</a>
        </li>
        <li class=" breadcrumb-item active">
            @(Model.servo_id > 0 ? Model.nomb_servo : "Nuevo Registro")
        </li>
    </ol>
</nav>

@using (Html.BeginForm("guardar", "servo", FormMethod.Post, new { id = "frm-servo" }))
{
    @Html.HiddenFor(x => x.servo_id)

    <div class="card">
        <div class="card-header">
            Informacion del Sensor
            <div class="card-body">
                <div class="form-group">
                    @Html.Label("Id")
                    @Html.TextBoxFor(x => x.servo_id, new { @class = "form-control", disabled = true })
                </div>

                <div class="form-group">
                    @Html.Label("Nombre")
                    @Html.TextBoxFor(x => x.nomb_servo, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.nomb_servo, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.Label("Torque")
                    @Html.TextBoxFor(x => x.torque_servo, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.torque_servo, null, new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.Label("Dimension")
                    @Html.TextBoxFor(x => x.dimens_servo, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.dimens_servo, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.Label("Voltaje")
                    @Html.TextBoxFor(x => x.voltaje_servo, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.voltaje_servo, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.Label("Velocidad movimiento")
                    @Html.TextBoxFor(x => x.vel_mov_servo, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.vel_mov_servo, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.Label("Peso")
                    @Html.TextBoxFor(x => x.peso_servo, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.peso_servo, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.Label("Estado")
                    <select name="estado_servo" class="form-control">
                        <option @(Model.estado_servo == "" ? "Selected" : "") value="">-Seleccione-</option>
                        <option @(Model.estado_servo == "A" ? "Selected" : "") value="A">Activo</option>
                        <option @(Model.estado_servo == "I" ? "Selected" : "") value="I">Inactivo</option>
                    </select>
                    @Html.ValidationMessageFor(x => x.estado_servo, null, new { @class = "text-danger" })
                </div>

            </div>
        </div>
    </div>

    <div class="card text-right">
        <button type="submit" class="btn btn-primary">Grabar</button>
        <a href="~/servo" class="btn btn-danger">Cancelar</a>
    </div>
    <br /><br />
}